// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProject.Database;

#nullable disable

namespace WebProject.Migrations
{
    [DbContext(typeof(PyRZyDB))]
    [Migration("20231113091301_Moved to PyRZyDB")]
    partial class MovedtoPyRZyDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebProject.Database.Aliases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.ToTable("Aliases");
                });

            modelBuilder.Entity("WebProject.Database.ChannelCommands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cooldown")
                        .HasColumnType("int");

                    b.Property<bool>("Deletable")
                        .HasColumnType("bit");

                    b.Property<int>("EditLevel")
                        .HasColumnType("int");

                    b.Property<string>("GameSpecific")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplex")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUsed")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParentCommand")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Timer")
                        .HasColumnType("int");

                    b.Property<int>("TimesUsed")
                        .HasColumnType("int");

                    b.Property<bool>("ToDisplay")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChannelCommands");
                });

            modelBuilder.Entity("WebProject.Database.ChannelInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttackersWin")
                        .HasColumnType("int");

                    b.Property<string>("BotColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BotProtection")
                        .HasColumnType("int");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ChatFeedback")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("DefendersWin")
                        .HasColumnType("int");

                    b.Property<int>("DuelsPlayed")
                        .HasColumnType("int");

                    b.Property<string>("Game")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStreaming")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextGame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PointsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedeemOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChannelInfo");
                });

            modelBuilder.Entity("WebProject.Database.ChannelLinks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LinkRequesterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LinkRequesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkTargetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkTargetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Linked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LinkRequesterId");

                    b.ToTable("ChannelLinks");
                });

            modelBuilder.Entity("WebProject.Database.ChatUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuelId")
                        .HasColumnType("int");

                    b.Property<int>("DuelsPlayed")
                        .HasColumnType("int");

                    b.Property<int>("DuelsWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsWatching")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDuel")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxLoseStreak")
                        .HasColumnType("int");

                    b.Property<int>("MaxWinStreak")
                        .HasColumnType("int");

                    b.Property<int>("MessagesSent")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Streak")
                        .HasColumnType("int");

                    b.Property<int>("TwitchId")
                        .HasColumnType("int");

                    b.Property<int>("Watchtime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TwitchId");

                    b.ToTable("ChatUsers");
                });

            modelBuilder.Entity("WebProject.Database.GlobalUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcceptsDuels")
                        .HasColumnType("bit");

                    b.Property<int>("DuelsPlayed")
                        .HasColumnType("int");

                    b.Property<int>("DuelsWon")
                        .HasColumnType("int");

                    b.Property<int>("MaxDuelBet")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ToRank")
                        .HasColumnType("bit");

                    b.Property<int>("TwitchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GlobalUsers");
                });

            modelBuilder.Entity("WebProject.Database.Quotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("WebProject.Database.Aliases", b =>
                {
                    b.HasOne("WebProject.Database.ChannelCommands", "ChannelCommands")
                        .WithMany("Aliases")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelCommands");
                });

            modelBuilder.Entity("WebProject.Database.ChannelLinks", b =>
                {
                    b.HasOne("WebProject.Database.ChannelInfo", "ChannelInfo")
                        .WithMany("ChannelLinks")
                        .HasForeignKey("LinkRequesterId")
                        .HasPrincipalKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelInfo");
                });

            modelBuilder.Entity("WebProject.Database.ChatUsers", b =>
                {
                    b.HasOne("WebProject.Database.GlobalUsers", "GlobalUsers")
                        .WithMany("ChatUsers")
                        .HasForeignKey("TwitchId")
                        .HasPrincipalKey("TwitchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlobalUsers");
                });

            modelBuilder.Entity("WebProject.Database.ChannelCommands", b =>
                {
                    b.Navigation("Aliases");
                });

            modelBuilder.Entity("WebProject.Database.ChannelInfo", b =>
                {
                    b.Navigation("ChannelLinks");
                });

            modelBuilder.Entity("WebProject.Database.GlobalUsers", b =>
                {
                    b.Navigation("ChatUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
